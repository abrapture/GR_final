#!/usr/bin/env python3
"""
–ü—Ä–∏–º–µ—Ä—ã –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è PDFExtractor –¥–ª—è —Ä–∞–∑–ª–∏—á–Ω—ã—Ö —Å—Ü–µ–Ω–∞—Ä–∏–µ–≤.
"""

from pathlib import Path
from extract_pdf import PDFExtractor


def example_1_basic_extraction():
    """–ü—Ä–∏–º–µ—Ä 1: –ë–∞–∑–æ–≤–æ–µ –∏–∑–≤–ª–µ—á–µ–Ω–∏–µ —Å–æ–¥–µ—Ä–∂–∏–º–æ–≥–æ –∏–∑ PDF –≤ Markdown."""
    print("=" * 60)
    print("–ü—Ä–∏–º–µ—Ä 1: –ë–∞–∑–æ–≤–æ–µ –∏–∑–≤–ª–µ—á–µ–Ω–∏–µ –≤ Markdown")
    print("=" * 60)
    
    extractor = PDFExtractor()
    
    # –£–∫–∞–∂–∏—Ç–µ –ø—É—Ç—å –∫ –≤–∞—à–µ–º—É PDF —Ñ–∞–π–ª—É
    pdf_path = Path("presentation.pdf")
    
    if pdf_path.exists():
        content = extractor.extract_single_file(pdf_path, output_format="markdown")
        
        if content:
            # –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞
            output_path = Path("output/presentation.md")
            extractor.save_to_file(content, output_path)
            
            # –í—ã–≤–æ–¥ –ø–µ—Ä–≤—ã—Ö 500 —Å–∏–º–≤–æ–ª–æ–≤
            print("\n–ü–µ—Ä–≤—ã–µ 500 —Å–∏–º–≤–æ–ª–æ–≤:")
            print(content[:500])
    else:
        print(f"‚ö† –§–∞–π–ª {pdf_path} –Ω–µ –Ω–∞–π–¥–µ–Ω. –°–æ–∑–¥–∞–π—Ç–µ —Ç–µ—Å—Ç–æ–≤—ã–π PDF.")


def example_2_html_export():
    """–ü—Ä–∏–º–µ—Ä 2: –≠–∫—Å–ø–æ—Ä—Ç –≤ HTML —Ñ–æ—Ä–º–∞—Ç."""
    print("\n" + "=" * 60)
    print("–ü—Ä–∏–º–µ—Ä 2: –≠–∫—Å–ø–æ—Ä—Ç –≤ HTML")
    print("=" * 60)
    
    extractor = PDFExtractor()
    
    pdf_path = Path("presentation.pdf")
    
    if pdf_path.exists():
        content = extractor.extract_single_file(pdf_path, output_format="html")
        
        if content:
            output_path = Path("output/presentation.html")
            extractor.save_to_file(content, output_path)
            print(f"\n‚úì HTML —Å–æ—Ö—Ä–∞–Ω–µ–Ω –≤ {output_path}")


def example_3_batch_processing():
    """–ü—Ä–∏–º–µ—Ä 3: –ü–∞–∫–µ—Ç–Ω–∞—è –æ–±—Ä–∞–±–æ—Ç–∫–∞ –Ω–µ—Å–∫–æ–ª—å–∫–∏—Ö PDF —Ñ–∞–π–ª–æ–≤."""
    print("\n" + "=" * 60)
    print("–ü—Ä–∏–º–µ—Ä 3: –ü–∞–∫–µ—Ç–Ω–∞—è –æ–±—Ä–∞–±–æ—Ç–∫–∞")
    print("=" * 60)
    
    extractor = PDFExtractor()
    
    # –°–ø–∏—Å–æ–∫ —Ñ–∞–π–ª–æ–≤ –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏
    pdf_files = [
        Path("presentation1.pdf"),
        Path("presentation2.pdf"),
        Path("presentation3.pdf"),
    ]
    
    # –§–∏–ª—å—Ç—Ä—É–µ–º —Ç–æ–ª—å–∫–æ —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ —Ñ–∞–π–ª—ã
    existing_files = [f for f in pdf_files if f.exists()]
    
    if existing_files:
        results = extractor.extract_multiple_files(existing_files, output_format="markdown")
        
        # –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –≤—Å–µ—Ö —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤
        output_dir = Path("output/batch")
        for filename, content in results.items():
            output_path = output_dir / f"{Path(filename).stem}.md"
            extractor.save_to_file(content, output_path)
        
        print(f"\n‚úì –û–±—Ä–∞–±–æ—Ç–∞–Ω–æ —Ñ–∞–π–ª–æ–≤: {len(results)}")
    else:
        print("‚ö† –ù–µ –Ω–∞–π–¥–µ–Ω–æ –Ω–∏ –æ–¥–Ω–æ–≥–æ PDF —Ñ–∞–π–ª–∞ –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏")


def example_4_ocr_processing():
    """–ü—Ä–∏–º–µ—Ä 4: –û–±—Ä–∞–±–æ—Ç–∫–∞ —Å–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω–Ω–æ–≥–æ PDF —Å OCR."""
    print("\n" + "=" * 60)
    print("–ü—Ä–∏–º–µ—Ä 4: –û–±—Ä–∞–±–æ—Ç–∫–∞ —Å OCR")
    print("=" * 60)
    
    # –°–æ–∑–¥–∞–µ–º —ç–∫—Å—Ç—Ä–∞–∫—Ç–æ—Ä —Å –≤–∫–ª—é—á–µ–Ω–Ω—ã–º OCR
    extractor = PDFExtractor(use_ocr=True)
    
    pdf_path = Path("scanned_presentation.pdf")
    
    if pdf_path.exists():
        print("–û–±—Ä–∞–±–æ—Ç–∫–∞ —Å–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω–Ω–æ–≥–æ –¥–æ–∫—É–º–µ–Ω—Ç–∞ (—ç—Ç–æ –º–æ–∂–µ—Ç –∑–∞–Ω—è—Ç—å –≤—Ä–µ–º—è)...")
        content = extractor.extract_single_file(pdf_path, output_format="markdown")
        
        if content:
            output_path = Path("output/scanned_presentation.md")
            extractor.save_to_file(content, output_path)
    else:
        print("‚ö† –°–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω–Ω—ã–π PDF –Ω–µ –Ω–∞–π–¥–µ–Ω")


def example_5_json_export():
    """–ü—Ä–∏–º–µ—Ä 5: –≠–∫—Å–ø–æ—Ä—Ç –≤ JSON –¥–ª—è –ø—Ä–æ–≥—Ä–∞–º–º–Ω–æ–π –æ–±—Ä–∞–±–æ—Ç–∫–∏."""
    print("\n" + "=" * 60)
    print("–ü—Ä–∏–º–µ—Ä 5: –≠–∫—Å–ø–æ—Ä—Ç –≤ JSON")
    print("=" * 60)
    
    extractor = PDFExtractor()
    
    pdf_path = Path("presentation.pdf")
    
    if pdf_path.exists():
        content = extractor.extract_single_file(pdf_path, output_format="json")
        
        if content:
            output_path = Path("output/presentation.json")
            extractor.save_to_file(content, output_path)
            print(f"\n‚úì JSON –¥–∞–Ω–Ω—ã–µ —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã –¥–ª—è –¥–∞–ª—å–Ω–µ–π—à–µ–π –æ–±—Ä–∞–±–æ—Ç–∫–∏")
            
            # –ú–æ–∂–Ω–æ –∑–∞–≥—Ä—É–∑–∏—Ç—å JSON –∏ —Ä–∞–±–æ—Ç–∞—Ç—å —Å –Ω–∏–º –ø—Ä–æ–≥—Ä–∞–º–º–Ω–æ
            import json
            doc_data = json.loads(content)
            print(f"–°—Ç—Ä—É–∫—Ç—É—Ä–∞ –¥–æ–∫—É–º–µ–Ω—Ç–∞ —Å–æ–¥–µ—Ä–∂–∏—Ç: {len(doc_data)} —ç–ª–µ–º–µ–Ω—Ç–æ–≤ –≤–µ—Ä—Ö–Ω–µ–≥–æ —É—Ä–æ–≤–Ω—è")


def example_6_working_with_document():
    """–ü—Ä–∏–º–µ—Ä 6: –†–∞–±–æ—Ç–∞ —Å –æ–±—ä–µ–∫—Ç–æ–º DoclingDocument."""
    print("\n" + "=" * 60)
    print("–ü—Ä–∏–º–µ—Ä 6: –†–∞–±–æ—Ç–∞ —Å –æ–±—ä–µ–∫—Ç–æ–º –¥–æ–∫—É–º–µ–Ω—Ç–∞")
    print("=" * 60)
    
    from docling.document_converter import DocumentConverter
    
    pdf_path = Path("presentation.pdf")
    
    if pdf_path.exists():
        converter = DocumentConverter()
        result = converter.convert(str(pdf_path))
        
        # –ü–æ–ª—É—á–∞–µ–º –æ–±—ä–µ–∫—Ç –¥–æ–∫—É–º–µ–Ω—Ç–∞
        doc = result.document
        
        print(f"–ù–∞–∑–≤–∞–Ω–∏–µ –¥–æ–∫—É–º–µ–Ω—Ç–∞: {doc.name}")
        print(f"–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å—Ç—Ä–∞–Ω–∏—Ü: {len(doc.pages) if hasattr(doc, 'pages') else 'N/A'}")
        
        # –≠–∫—Å–ø–æ—Ä—Ç –≤ —Ä–∞–∑–Ω—ã–µ —Ñ–æ—Ä–º–∞—Ç—ã
        markdown = doc.export_to_markdown()
        html = doc.export_to_html()
        
        print(f"\n–†–∞–∑–º–µ—Ä Markdown: {len(markdown)} —Å–∏–º–≤–æ–ª–æ–≤")
        print(f"–†–∞–∑–º–µ—Ä HTML: {len(html)} —Å–∏–º–≤–æ–ª–æ–≤")
        
        # –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –≤ –æ–±–∞ —Ñ–æ—Ä–º–∞—Ç–∞
        extractor = PDFExtractor()
        extractor.save_to_file(markdown, Path("output/doc.md"))
        extractor.save_to_file(html, Path("output/doc.html"))


def main():
    """–ó–∞–ø—É—Å–∫ –≤—Å–µ—Ö –ø—Ä–∏–º–µ—Ä–æ–≤."""
    print("\n" + "üöÄ " * 20)
    print("–ü–†–ò–ú–ï–†–´ –ò–°–ü–û–õ–¨–ó–û–í–ê–ù–ò–Ø DOCLING –î–õ–Ø –ò–ó–í–õ–ï–ß–ï–ù–ò–Ø PDF")
    print("üöÄ " * 20 + "\n")
    
    # –°–æ–∑–¥–∞–µ–º –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –¥–ª—è –≤—ã–≤–æ–¥–∞
    Path("output").mkdir(exist_ok=True)
    
    # –ó–∞–ø—É—Å–∫–∞–µ–º –ø—Ä–∏–º–µ—Ä—ã
    example_1_basic_extraction()
    example_2_html_export()
    example_3_batch_processing()
    example_4_ocr_processing()
    example_5_json_export()
    example_6_working_with_document()
    
    print("\n" + "‚úì " * 20)
    print("–í–°–ï –ü–†–ò–ú–ï–†–´ –ó–ê–í–ï–†–®–ï–ù–´")
    print("‚úì " * 20 + "\n")


if __name__ == "__main__":
    main()

