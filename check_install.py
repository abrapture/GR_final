#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —É—Å—Ç–∞–Ω–æ–≤–∫–∏ Docling –∏ –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏ —Å–∏—Å—Ç–µ–º—ã.
"""

import sys


def check_python_version():
    """–ü—Ä–æ–≤–µ—Ä–∫–∞ –≤–µ—Ä—Å–∏–∏ Python."""
    version = sys.version_info
    print(f"üêç Python –≤–µ—Ä—Å–∏—è: {version.major}.{version.minor}.{version.micro}")
    
    if version.major < 3 or (version.major == 3 and version.minor < 8):
        print("‚ùå –¢—Ä–µ–±—É–µ—Ç—Å—è Python 3.8 –∏–ª–∏ –≤—ã—à–µ")
        return False
    else:
        print("‚úì –í–µ—Ä—Å–∏—è Python –ø–æ–¥—Ö–æ–¥–∏—Ç")
        return True


def check_docling():
    """–ü—Ä–æ–≤–µ—Ä–∫–∞ —É—Å—Ç–∞–Ω–æ–≤–∫–∏ Docling."""
    try:
        from docling.document_converter import DocumentConverter
        print("\nüì¶ Docling:")
        print("‚úì Docling —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω —É—Å–ø–µ—à–Ω–æ")
        return True
    except ImportError as e:
        print("\nüì¶ Docling:")
        print(f"‚ùå Docling –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω: {e}")
        print("\nüí° –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ –∫–æ–º–∞–Ω–¥–æ–π:")
        print("   pip install docling")
        print("   –∏–ª–∏ –∑–∞–ø—É—Å—Ç–∏—Ç–µ: ./install.sh")
        return False


def check_optional_dependencies():
    """–ü—Ä–æ–≤–µ—Ä–∫–∞ –æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω—ã—Ö –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π."""
    print("\nüîß –û–ø—Ü–∏–æ–Ω–∞–ª—å–Ω—ã–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏:")
    
    deps = {
        "PIL": "Pillow (–¥–ª—è —Ä–∞–±–æ—Ç—ã —Å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è–º–∏)",
        "easyocr": "EasyOCR (–¥–ª—è OCR —Å–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤)",
        "pytesseract": "PyTesseract (–∞–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–∞ –¥–ª—è OCR)"
    }
    
    for module, description in deps.items():
        try:
            __import__(module)
            print(f"‚úì {description} - —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω")
        except ImportError:
            print(f"‚ö†  {description} - –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ)")


def check_files():
    """–ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏—è –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã—Ö —Ñ–∞–π–ª–æ–≤."""
    from pathlib import Path
    
    print("\nüìÅ –§–∞–π–ª—ã –ø—Ä–æ–µ–∫—Ç–∞:")
    
    required_files = [
        "extract_pdf.py",
        "example_usage.py",
        "requirements.txt",
        "README.md",
        "QUICKSTART.md"
    ]
    
    all_present = True
    for filename in required_files:
        if Path(filename).exists():
            print(f"‚úì {filename}")
        else:
            print(f"‚ùå {filename} –Ω–µ –Ω–∞–π–¥–µ–Ω")
            all_present = False
    
    return all_present


def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –ø—Ä–æ–≤–µ—Ä–∫–∏."""
    print("=" * 60)
    print("–ü–†–û–í–ï–†–ö–ê –£–°–¢–ê–ù–û–í–ö–ò DOCLING")
    print("=" * 60)
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∏
    python_ok = check_python_version()
    docling_ok = check_docling()
    check_optional_dependencies()
    files_ok = check_files()
    
    # –ò—Ç–æ–≥–∏
    print("\n" + "=" * 60)
    print("–ò–¢–û–ì–ò –ü–†–û–í–ï–†–ö–ò")
    print("=" * 60)
    
    if python_ok and docling_ok and files_ok:
        print("‚úì ‚úì ‚úì –í—Å—ë –≥–æ—Ç–æ–≤–æ –∫ —Ä–∞–±–æ—Ç–µ! ‚úì ‚úì ‚úì")
        print("\nüìñ –°–ª–µ–¥—É—é—â–∏–µ —à–∞–≥–∏:")
        print("   1. –ü—Ä–æ—á–∏—Ç–∞–π—Ç–µ QUICKSTART.md")
        print("   2. –ó–∞–ø—É—Å—Ç–∏—Ç–µ: python extract_pdf.py your_file.pdf")
        print("   3. –ò–∑—É—á–∏—Ç–µ –ø—Ä–∏–º–µ—Ä—ã: python example_usage.py")
        return 0
    else:
        print("‚ö†Ô∏è  –û–±–Ω–∞—Ä—É–∂–µ–Ω—ã –ø—Ä–æ–±–ª–µ–º—ã")
        if not docling_ok:
            print("\nüí° –ó–∞–ø—É—Å—Ç–∏—Ç–µ —É—Å—Ç–∞–Ω–æ–≤–∫—É:")
            print("   ./install.sh")
            print("   –∏–ª–∏")
            print("   pip install docling")
        return 1


if __name__ == "__main__":
    sys.exit(main())

